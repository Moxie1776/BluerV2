# This file contains common pin mappings for MKS Robin Nano V3
# boards. To use this config, the firmware should be compiled for the
# stm32f407. When running "make menuconfig", select the 48KiB
# bootloader, and enable "USB for communication"
#idenfictaion of usb by path and not by ID

# The "make flash" command does not work on the MKS Robin. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "Robin_nano_v3.bin" on an SD card and then restart the
# MKS Robin with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: PA15
position_endstop: 0
position_max: 300
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PD5
interpolate: True
run_current: 0.9
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: PD2
position_endstop: 0
position_max: 300
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PD7
interpolate: True
run_current: 0.9
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z]
step_pin: PB5
dir_pin: PB4
enable_pin: !PB8
microsteps: 16
rotation_distance: 8
homing_speed: 5
endstop_pin: probe:z_virtual_endstop
position_max: 280
position_min: -2

[tmc2209 stepper_z]
uart_pin: PD4
interpolate: True
run_current: 1.2
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z1]
step_pin: PD15
dir_pin: !PA1
enable_pin: !PA3
microsteps: 16
rotation_distance: 8

[tmc2209 stepper_z1]
uart_pin: PD8
interpolate: True
run_current: 0.9
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[bltouch] 
sensor_pin: ^PC8
control_pin: PA8 
#x_offset: 42 
#y_offset: -2 
z_offset: 3.00


[safe_z_home]
home_xy_position: 150,100 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 2

#vitesse Ã  controler
[bed_mesh]
speed: 50
horizontal_move_z: 2
mesh_min: 5,20
mesh_max: 280, 220
probe_count: 6,6


[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PE5
sensor_type: EPCOS 100K B57560G104F
#ATC Semitec 104GT-2
sensor_pin: PC1
control: pid
pid_Kp: 14.669
pid_Ki: 0.572
pid_Kd: 94.068
min_temp: 0
max_temp:250 

[tmc2209 extruder]
uart_pin: PD9
interpolate: true
run_current: 0.5
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0


[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
pid_Kp: 325.10
pid_Ki: 63.35
pid_Kd: 417.10
min_temp: 0
max_temp: 130
max_power: 0.2


[heater_generic CHAMBER_HEATER]
gcode_id: C
heater_pin: PB0
#max_power:
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA2
#smooth_time:
control: pid 
##watermark
pid_Kp: 325.10
pid_Ki: 63.35
pid_Kd: 417.10
#pwm_cycle_time:
min_temp: 0
max_temp: 70


[verify_heater CHAMBER_HEATER]
max_error: 50000
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time:1250
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 0.1
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 0.1
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

[fan]
  # fan1
pin: PB1 # fan2


[heater_fan my_nozzle_fan]
pin: PC14 
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#   See the "fan" section for a description of the above parameters.
#heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 60.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0


[mcu]
serial: /dev/serial/by-path/platform-20980000.usb-usb-0:1:1.0
##/dev/serial/by-id/usb-Klipper_stm32f407xx_250031000A51363439343739-if00
##/dev/serial/by-id/usb-STMicroelectronics_GENERICSTM32F407VGT6_CDC_in_FS_Mode_3968345E3436-if00

[printer]
kinematics: corexy
max_velocity: 250
max_accel: 4500
max_z_velocity: 15
max_z_accel: 50


[static_digital_output reset_display]
pins: !PC6, !PD13


[virtual_sdcard]
path: /home/pi/gcode_files

[pause_resume]

[display_status]

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
##EXP1 header
    EXP1_1=PC5,
    EXP1_3=PD13
    EXP1_5=PE14
    EXP1_7=PD11
    EXP1_9=<GND>
    EXP1_2=PE13
    EXP1_4=PC6
    EXP1_6=PE15
    EXP1_8=PD10
    EXP1_10=<5V>,
    ##EXP2 header
    EXP2_1=PA6
    EXP2_3=PE8
    EXP2_5=PE11
    EXP2_7=PE12
    EXP2_9=<GND>
    EXP2_2=PA5
    EXP2_4=PE10
    EXP2_6=PA7
    EXP2_8=<RST>
    EXP2_10=<3.3v>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"

# See the sample-lcd.cfg file for definitions of common LCD displays.

#MACRO
###############################################################################################################################

#[z_tilt]
##	Use Z_TILT_ADJUST to level the bed left to right.
##	z_positions: Location of toolhead

##--------------------------------------------------------------------

## Uncomment below for 300mm build

#z_positions: [30, 95][285, 95]

#speed: 200
#horizontal_move_z: 10
#retries: 5
#retry_tolerance: 0.0075

[screws_tilt_adjust]
## To run this command, use SCREWS_TILT_CALCULATE
##--------------------------------------------------------------------
##	Uncomment below for 250x250
#screw1: 40,180
#screw1_name: rear left screw
#screw2: 210,180
#screw2_name: rear right screw
#screw3: 125,10
#screw3_name: front screw
#horizontal_move_z: 5
#speed: 200
#screw_thread: CCW-M3

##	Uncomment below for 300x300
screw1: 40,230
screw1_name: rear left screw
screw2: 260,230
screw2_name: rear right screw
screw3: 150,10
screw3_name: front screw
horizontal_move_z: 5
speed: 200
screw_thread: CCW-M3
##--------------------------------------------------------------------

[bed_mesh]
speed: 200
horizontal_move_z: 5
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

[gcode_macro G29]
gcode:
   G28
   BED_MESH_CALIBRATE
   BED_MESH_PROFILE SAVE=p1
   G1 X0 Y0 F4000

[gcode_macro M138] ##Chamber Heater ON
gcode:
    SET_HEATER_TEMPERATURE HEATER=CHAMBER_HEATER TARGET={ params.T }

[gcode_macro M139] ##Chamber Heater OFF
gcode:
    SET_HEATER_TEMPERATURE HEATER=CHAMBER_HEATER TARGET=0



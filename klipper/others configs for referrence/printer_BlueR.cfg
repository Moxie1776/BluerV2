
# This file contains common pin mappings for the Two Trees Bluer 
# Based on Robin Nano V1.2 r004 
# Bluer from 2020 (revision TMC2208 and BMG clone extruder)
# Optional equiped with 3D touch


# To use this config, the firmware should be compiled for the STM32F103.
# When running "make menuconfig" you have to:
# - enable "extra low-level configuration setup",
# - select the 28KiB bootloader,
# - disable "USB for communication"
# - select USART3 for the "Serial Port"
# - Speed set as default 250000
# - set "GPIO pins to set at micro-controller startup" to "!PC6,!PD13"

# Note that the "make flash" command does not work with the Sapphire
# Pro. After running "make", run the following command:
#   ./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano35.bin
# Copy the file out/Robin_nano35.bin to an SD card and then restart the
# printer with that SD card.

# See docs/Config_Reference.md for a description of parameters.

####### Stepper DEF ########

[stepper_x]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 40 
endstop_pin: !PA15
position_endstop: 0
position_max: 235
homing_speed: 50


[stepper_y]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: !PA12
position_endstop: 0
position_max: 235
homing_speed: 50


[stepper_z]
step_pin: PB5
dir_pin: PB4
enable_pin: !PB8
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#Change probe:"z_virtual_endstop" to "!PA11" if no BL-Touch or 3Dtouch
#position_endstop: 0.0
position_max: 260
position_min: -2



#pin à comfirmer
#Uncomment if bl-touch present
[bltouch] 
sensor_pin: ^PA11 
control_pin: PA8 
#x_offset: 42 
#y_offset: -2 
z_offset: 3.97


[safe_z_home]
home_xy_position: 76,119 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

#vitesse à controler
[bed_mesh]
speed: 50
horizontal_move_z: 8
mesh_min: 5,20
mesh_max: 169, 217
probe_count: 4,4

[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 7.89
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC3
sensor_type: EPCOS 100K B57560G104F # Stock
sensor_pin: PC1
min_temp: 0
max_temp: 265
pressure_advance = 0.39


#control: pid
#pid_Kp: 17.48
#pid_Ki: 1.32
#pid_Kd: 57.81


[heater_generic CHAMBER_HEATER]
gcode_id: C
heater_pin: PB0
#max_power:
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC2
#smooth_time:
control: pid 
##watermark
pid_Kp: 325.10
pid_Ki: 63.35
pid_Kd: 417.10
#pwm_cycle_time:
min_temp: 0
max_temp: 70


[verify_heater CHAMBER_HEATER]
max_error: 50000
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time:1250
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 0.1
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 0.1
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.


[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F # Stock
sensor_pin: PC0
min_temp: 0
max_temp: 120
#control: pid
#pid_Kp: 325.10
#pid_Ki: 63.35
#pid_Kd: 417.10

[fan]
pin: PB1

[mcu]
#adresse as to be set with the retur of the command on your pi "ls /dev/serial/by-id/*¨"
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.3:1.0-port0

restart_method: command

[printer]
kinematics: cartesian
max_velocity: 250
max_accel: 1250
max_z_velocity: 50
max_z_accel: 100

[static_digital_output reset_display]
pins: !PC6, !PD13


[virtual_sdcard]
path: /home/pi/gcode_files

[pause_resume]

[display_status]

#MACRO
###############################################################################################################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

[gcode_macro G29]
gcode:
   G28
   BED_MESH_CALIBRATE
   BED_MESH_PROFILE SAVE=p1
   G1 X0 Y0 F4000

[gcode_macro M138] ##Chamber Heater ON
gcode:
    SET_HEATER_TEMPERATURE HEATER=CHAMBER_HEATER TARGET={ params.T }

[gcode_macro M139] ##Chamber Heater OFF
gcode:
    SET_HEATER_TEMPERATURE HEATER=CHAMBER_HEATER TARGET=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 13.174
#*# pid_ki = 0.392
#*# pid_kd = 110.663
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 60.001
#*# pid_ki = 1.439
#*# pid_kd = 625.513
#*#
#*# [CHAMBER_HEATER]
#*# control = pid
#*# pid_kp = 55.161
#*# pid_ki = 0.978
#*# pid_kd = 777.775
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.255000, 0.075000, -0.015000, -0.100000
#*# 	  0.220000, 0.065000, -0.015000, -0.137500
#*# 	  0.215000, 0.047500, -0.052500, -0.135000
#*# 	  0.365000, 0.137500, 0.057500, -0.032500
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = lagrange
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 4
#*# max_y = 216.97
#*# mesh_x_pps = 2
#*# max_x = 153.97
